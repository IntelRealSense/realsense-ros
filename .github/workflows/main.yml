name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the ros2-beta branch
  push:
    branches:
      - ros2-beta
  pull_request:
    branches:
      - ros2-beta

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
# This workflow contains a single job called "build"

jobs:
  build:
    name: Build on ROS2 ${{ matrix.ros_distro }} and ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        ros_distro: [humble, galactic, foxy, eloquent, dashing]
        include:
        - ros_distro: 'humble'
          os: ubuntu-22.04
        - ros_distro: 'galactic'
          os: ubuntu-20.04
        - ros_distro: 'foxy'
          os: ubuntu-20.04
        - ros_distro: 'eloquent'
          os: ubuntu-18.04
        - ros_distro: 'dashing'
          os: ubuntu-18.04

    steps:
    

    - name: Setup ROS2 Workspace
      run: | 
        mkdir -p ${{github.workspace}}/ros2/src

    - uses: actions/checkout@v2
      with:
        path: 'ros2/src/realsense-ros'
    
    - name: Check Copyright & Line-Endings
      shell: bash
      run: |
        cd ${{github.workspace}}/ros2/src/realsense-ros/scripts
        ./pr_check.sh 
    
    ## If distro is one of [galactic, foxy, eloquent, dashing], use the setup-ros@v0.2
    ## which supports old versions of ROS2 and EOL versions.
    ## For Humble distro, use v0.3 
    ## See: 1) https://github.com/ros-tooling/setup-ros#Supported-platforms
    ##      2) https://github.com/ros-tooling/setup-ros/tree/v0.2#Supported-platforms 
    - name: build ROS2 Galactic/Foxy/Eloquent/Dashing
      if: ${{ matrix.ros_distro != 'humble'}}
      uses: ros-tooling/setup-ros@v0.2
      with:
        required-ros-distributions: ${{ matrix.ros_distro }}
    - name: build ROS2 Humble
      if: ${{ matrix.ros_distro == 'humble' }}
      uses: ros-tooling/setup-ros@v0.3
      with:
        required-ros-distributions: ${{ matrix.ros_distro }}
        
    ## For all distros except humble, install RealSense SDK From Debinas
    ## For Humble distro, install from source (TODO: Change this when we got debians for Humble)
    - name: Install RealSense SDK 2.0 Dependencies
      if: ${{ matrix.ros_distro != 'humble' }}
      run: |
        sudo apt-get update
        sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com --recv-key C8B3A55A6F3EFCDE
        sudo add-apt-repository "deb https://librealsense.intel.com/Debian/apt-repo $(lsb_release -cs) main"
        sudo apt-get update -qq
        sudo apt-get install librealsense2-dev --allow-unauthenticated -y
        sudo apt-get update
    - name: Build RealSense SDK 2.0 from source
      if: ${{ matrix.ros_distro == 'humble' }}
      run: |
        cd ${{github.workspace}}
        git clone https://github.com/IntelRealSense/librealsense.git -b master
        cd librealsense
        sudo mkdir build
        cd build
        sudo cmake ../ -DCMAKE_BUILD_TYPE=Release -DBUILD_EXAMPLES=false -DBUILD_GRAPHICAL_EXAMPLES=false
        sudo make uninstall
        sudo make clean
        sudo make -j10
        sudo make install

    - name: Build
      run: | 
        echo "source /opt/ros/${{ matrix.ros_distro }}/setup.bash" >> ${{github.workspace}}/.bashrc
        source ${{github.workspace}}/.bashrc
        cd ${{github.workspace}}/ros2
        echo "================= ROSDEP UPDATE ====================="
        rosdep update --rosdistro ${{ matrix.ros_distro }}
        echo "================= ROSDEP INSTALL ===================="
        rosdep install -i --reinstall --from-path src --rosdistro ${{ matrix.ros_distro }} --skip-keys=librealsense2 -y
        echo "================== COLCON BUILD ======================"
        colcon build  --cmake-args '-DBUILD_TOOLS=ON' --event-handlers log_command+ --event-handlers console_direct+ --executor sequential

    - name: Download Data For Tests
      run: |
        cd ${{github.workspace}}/ros2
        bag_filename="https://librealsense.intel.com/rs-tests/TestData/outdoors_1color.bag";
        wget $bag_filename -P "records/"
        bag_filename="https://librealsense.intel.com/rs-tests/D435i_Depth_and_IMU_Stands_still.bag";
        wget $bag_filename -P "records/"
        
    - name: Install Packages For Tests
      run: |
        sudo apt-get install python3-pip
        pip3 install numpy --upgrade
        pip3 install numpy-quaternion tqdm

    - name: Run Tests
      run: |
        cd ${{github.workspace}}/ros2
        source ${{github.workspace}}/.bashrc
        . install/local_setup.bash
        python3 src/realsense-ros/realsense2_camera/scripts/rs2_test.py non_existent_file
        
