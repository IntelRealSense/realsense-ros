name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the ros2-development branch
  push:
    branches:
      - ros2-development
  pull_request:
    branches:
      - ros2-development

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

permissions: read-all

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
# This workflow contains a single job called "build"

jobs:
  build:
    name: Build on ROS2 ${{ matrix.ros_distro }} and ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        ros_distro: [rolling, iron, humble]
        include:
        - ros_distro: 'rolling'
          os: ubuntu-22.04
        - ros_distro: 'iron'
          os: ubuntu-22.04
        - ros_distro: 'humble'
          os: ubuntu-22.04

    steps:

    - name: Setup ROS2 Workspace
      run: |
        mkdir -p ${{github.workspace}}/ros2/src

    - uses: actions/checkout@v3
      with:
        path: 'ros2/src/realsense-ros'
    
    - name: Check Copyright & Line-Endings
      shell: bash
      run: |
        cd ${{github.workspace}}/ros2/src/realsense-ros/scripts
        ./pr_check.sh 

    - name: build ROS2
      uses: ros-tooling/setup-ros@v0.7
      with:
        required-ros-distributions: ${{ matrix.ros_distro }}
                
    - name: Build RealSense SDK 2.0 from source
      run: |
        cd ${{github.workspace}}
        git clone https://github.com/IntelRealSense/librealsense.git -b development
        cd librealsense
        sudo mkdir build
        cd build
        sudo cmake ../ -DCMAKE_BUILD_TYPE=Release -DBUILD_EXAMPLES=false -DBUILD_GRAPHICAL_EXAMPLES=false
        sudo make uninstall
        sudo make clean
        sudo make -j10
        sudo make install

    - name: Build RealSense ROS2 Wrapper
      run: | 
        echo "source /opt/ros/${{ matrix.ros_distro }}/setup.bash" >> ${{github.workspace}}/.bashrc
        source ${{github.workspace}}/.bashrc
        cd ${{github.workspace}}/ros2
        echo "================= ROSDEP UPDATE ====================="
        rosdep update --rosdistro ${{ matrix.ros_distro }}
        echo "================= ROSDEP INSTALL ===================="
        rosdep install -i --reinstall --from-path src --rosdistro ${{ matrix.ros_distro }} --skip-keys=librealsense2 -y
        echo "================== COLCON BUILD ======================"
        colcon build  --cmake-args '-DBUILD_TOOLS=ON'

    ## This step is commented out since we don't use rosbag files in "Run Tests" step below.
    ## Please uncomment when "Run Tests" step is fixed to run all tests.
    #- name: Download Data For Tests
    #  if: ${{ matrix.ros_distro != 'rolling'}}
    #  run: |
    #    cd ${{github.workspace}}/ros2
    #    bag_filename="https://librealsense.intel.com/rs-tests/TestData/outdoors_1color.bag";
    #    wget $bag_filename -P "records/"
    #    bag_filename="https://librealsense.intel.com/rs-tests/D435i_Depth_and_IMU_Stands_still.bag";
    #    wget $bag_filename -P "records/"
    #    sudo apt install ros-${{ matrix.ros_distro}}-launch-pytest
       
    - name: Install Packages For Tests
      run: |
        sudo apt-get install python3-pip
        pip3 install numpy --upgrade
        pip3 install numpy-quaternion tqdm
 
    - name: Run Tests
      run: |
        cd ${{github.workspace}}/ros2
        source ${{github.workspace}}/.bashrc
        . install/local_setup.bash
        python3 src/realsense-ros/realsense2_camera/scripts/rs2_test.py non_existent_file
    
    - name: Run integration tests
      if: ${{ matrix.ros_distro != 'rolling'}}
      run: |
        cd ${{github.workspace}}/ros2
        source ${{github.workspace}}/.bashrc
        . install/local_setup.bash
        #export ROSBAG_FILE_PATH=${{github.workspace}}/ros2/records/
        colcon test --packages-select realsense2_camera --event-handlers console_direct+
        colcon test-result --all --test-result-base build/realsense2_camera/test_results/ --verbose
