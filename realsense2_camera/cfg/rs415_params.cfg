#!/usr/bin/env python

PACKAGE="realsense2_camera"

from dynamic_reconfigure.parameter_generator_catkin import *

import base_d400_params

gen = ParameterGenerator()

base_d400_params.add_base_params(gen, "rs415_")

#             Name                               Type       Level  Description                  Default    Min     Max
gen.add("rs415_depth_enable_auto_white_balance", bool_t,    9,     "Enable Auto White Balance", False)
gen.add("rs415_depth_exposure",                  int_t,     10,    "Exposure",                  1650,      1,      8300) # The exposure step is 20 by definition but the param step is 1 by default so we divided all values by 20 and multiply it back in SW
gen.add("rs415_depth_laser_power",               double_t,  11,    "Laser Power",               12.5,      0,      12) # Multiple value by 30
emitter_enabled_enum = gen.enum([gen.const("Off",  int_t,  0,  "Off"),
                                 gen.const("On",   int_t,  1,  "On"),
                                 gen.const("Auto", int_t,  2,  "Auto")], "Depth Emitter")
gen.add("rs415_depth_emitter_enabled",           int_t,     12,    "Depth Emitter Enabled",     1,         0,      2, edit_method=emitter_enabled_enum)

gen.add("rs415_color_backlight_compensation",    bool_t,    13,    "Backlight Compensation",    False)
gen.add("rs415_color_brightness",                int_t,     14,    "Brightness",                0,         -64,    64)
gen.add("rs415_color_contrast",                  int_t,     15,    "Contrast",                  50,        0,      100)
gen.add("rs415_color_exposure",                  int_t,     16,    "Exposure",                  166,       41,     10000)
gen.add("rs415_color_gain",                      int_t,     17,    "Gain",                      64,        0,      128)
gen.add("rs415_color_gamma",                     int_t,     18,    "Gamma",                     300,       100,    500)
gen.add("rs415_color_hue",                       int_t,     19,    "Hue",                       0,         -180,   180)
gen.add("rs415_color_saturation",                int_t,     20,    "Saturation",                64,        0,      100)
gen.add("rs415_color_sharpness",                 int_t,     21,    "Sharpness",                 50,        0,      100)
gen.add("rs415_color_white_balance",             int_t,     22,    "White Balance",             460,       280,    650) # Multiple value by 10
gen.add("rs415_color_enable_auto_exposure",      bool_t,    23,    "Enable Auto Exposure",      True)
gen.add("rs415_color_enable_auto_white_balance", bool_t,    24,    "Enable Auto White Balance", True)
gen.add("rs415_color_frames_queue_size",         int_t,     25,    "Frames Queue Size",         16,        0,      32)
power_line_frequency_enum = gen.enum([gen.const("Disable",       int_t,  0,  "Disable"),
                                      gen.const("50Hz",          int_t,  1,  "50Hz"),
                                      gen.const("60Hz",          int_t,  2,  "60Hz"),
                                      gen.const("AutoFrequency", int_t,  3,  "Auto")], "Power Line Frequency")
gen.add("rs415_color_power_line_frequency",      int_t,     26,    "Power Line Frequency",      3,         0,      3, edit_method=power_line_frequency_enum)
gen.add("rs415_color_auto_exposure_priority",    bool_t,    27,    "Auto Exposure Priority",    False)

exit(gen.generate(PACKAGE, "realsense2_camera", "rs415_params"))

